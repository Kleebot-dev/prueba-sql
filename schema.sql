CREATE SCHEMA sch_store

CREATE TABLE sch_store.tc_invoice_type (
    invoice_type_id int GENERATED BY DEFAULT AS IDENTITY(INCREMENT BY 1 MINVALUE 1 MAXVALUE 2147483647 START 1 CACHE 1 NO CYCLE) NOT NULL,  -- PK
    name VARCHAR(255) NOT NULL,  -- Nombre del producto
    description VARCHAR(255) NULL,  -- Descripción del producto
    CONSTRAINT pk_tc_invoice_type PRIMARY KEY (invoice_type_id)
);

CREATE TABLE sch_store.td_invoice (
    invoice_id int GENERATED BY DEFAULT AS IDENTITY(INCREMENT BY 1 MINVALUE 1 MAXVALUE 2147483647 START 1 CACHE 1 NO CYCLE) NOT NULL,  -- PK
    uuid uuid NOT NULL,  -- Identificador único de la factura
    issuer_rfc VARCHAR(255) NOT NULL,  -- RFC del emisor
    issuer_name VARCHAR(255) NOT NULL,  -- Nombre del emisor
    receiver_rfc VARCHAR(255) NOT NULL,  -- RFC del receptor
    receiver_name VARCHAR(255) NOT NULL,  -- Nombre del receptor
    issued_at TIMESTAMP NOT NULL,  -- Fecha y hora de emisión de la factura
    invoice_type_id int NOT NULL,  -- Tipo de factura
    CONSTRAINT pk_td_invoice PRIMARY KEY (invoice_id),
    CONSTRAINT uk_td_invoice_uuid UNIQUE (uuid),
    CONSTRAINT fk_td_invoice_invoice_type_id FOREIGN KEY (invoice_type_id) REFERENCES sch_store.tc_invoice_type(invoice_type_id)
);

CREATE TABLE sch_store.tc_product (
    product_id int GENERATED BY DEFAULT AS IDENTITY(INCREMENT BY 1 MINVALUE 1 MAXVALUE 2147483647 START 1 CACHE 1 NO CYCLE) NOT NULL,  -- ID único autoincremental del producto
    name VARCHAR(255) NOT NULL,  -- Nombre del producto
    description VARCHAR(255) NULL,  -- Descripción del producto
    unit_price NUMERIC(20, 4) NOT NULL,  -- Precio unitario del producto/servicio
    CONSTRAINT pk_tc_product PRIMARY KEY (product_id)
);

CREATE TABLE sch_store.td_invoice_concept (
    invoice_concept_id int GENERATED BY DEFAULT AS IDENTITY( INCREMENT BY 1 MINVALUE 1 MAXVALUE 2147483647 START 1 CACHE 1 NO CYCLE) NOT NULL,  -- PK
    uuid uuid NOT NULL,  -- Identificador único de la factura
    product_id int NOT NULL,  -- Identificador del producto
    description TEXT NULL,  -- Descripción del producto/servicio
    quantity NUMERIC(20, 4) NOT NULL,  -- Cantidad del producto/servicio
    CONSTRAINT pk_td_invoice_concept PRIMARY KEY (invoice_concept_id),
    CONSTRAINT fk_td_invoice_concept_uuid FOREIGN KEY (uuid) REFERENCES sch_store.td_invoice(uuid),
    CONSTRAINT fk_td_invoice_concept_product_id FOREIGN KEY (product_id) REFERENCES sch_store.tc_product(product_id) 
);
